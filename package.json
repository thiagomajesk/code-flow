{
  "name": "code-flow",
  "displayName": "Code Flow",
  "description": "Visual Studio Code Extension For Productivity Junkies",
  "preview": true,
  "license": "AGPL-3.0",
  "version": "0.0.6",
  "icon": "static/code-flow-logo.png",
  "publisher": "tmg",
  "homepage": "https://github.com/thiagomajesk/code-flow",
  "repository": {
    "type": "git",
    "url": "https://github.com/thiagomajesk/code-flow"
  },
  "engines": {
    "vscode": "^1.55.0"
  },
  "categories": [
    "Keymaps",
    "Extension Packs",
    "Other"
  ],
  "keywords": [
    "productivity",
    "vim-like",
    "emacs-like",
    "shortcuts",
    "awesome"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/src/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "code-flow.paragraphMoveUp",
        "title": "Code Flow: Move By Paragraph Up"
      },
      {
        "command": "code-flow.paragraphMoveDown",
        "title": "Code Flow: Move By Paragraph Down"
      },
      {
        "command": "code-flow.paragraphSelectUp",
        "title": "Code Flow: Select By Paragraph Up"
      },
      {
        "command": "code-flow.paragraphSelectDown",
        "title": "Code Flow: Select By Paragraph Down"
      },
      {
        "command": "code-flow.paragraphExpandSelection",
        "title": "Code Flow: Expand Selection To Paragraph"
      },
      {
        "command": "code-flow.paragraphMoveStart",
        "title": "Code Flow: Move To Paragraph Start"
      },
      {
        "command": "code-flow.paragraphSelectStart",
        "title": "Code Flow: Select To Paragraph Start"
      },
      {
        "command": "code-flow.paragraphMoveEnd",
        "title": "Code Flow: Move To Paragraph End"
      },
      {
        "command": "code-flow.paragraphSelectEnd",
        "title": "Code Flow: Select To Paragraph End"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+k ctrl+e",
        "mac": "cmd+k cmd+e",
        "command": "workbench.view.explorer"
      },
      {
        "key": "ctrl+k ctrl+f",
        "mac": "cmd+k cmd+f",
        "command": "workbench.view.search"
      },
      {
        "key": "ctrl+k ctrl+g",
        "mac": "cmd+k cmd+g",
        "command": "workbench.view.scm"
      },
      {
        "key": "ctrl+k ctrl+d",
        "mac": "cmd+k cmd+d",
        "command": "workbench.view.debug"
      },
      {
        "key": "ctrl+k ctrl+x",
        "mac": "cmd+k cmd+x",
        "command": "workbench.extensions.action.showInstalledExtensions"
      },
      {
        "key": "ctrl+k ctrl+s",
        "mac": "cmd+k cmd+s",
        "command": "workbench.action.toggleSidebarVisibility"
      },
      {
        "key": "ctrl+k ctrl+r",
        "mac": "cmd+k cmd+r",
        "command": "targetsWsl.focus"
      },
      {
        "key": "ctrl+k ctrl+b",
        "mac": "cmd+k cmd+b",
        "command": "workbench.action.focusActiveEditorGroup"
      },
      {
        "key": "ctrl+k ctrl+t",
        "mac": "cmd+k cmd+t",
        "command": "workbench.action.terminal.toggleTerminal"
      },
      {
        "key": "ctrl+k ctrl+m",
        "mac": "cmd+k cmd+m",
        "command": "editor.action.toggleMinimap"
      },
      {
        "key": "ctrl+n",
        "mac": "cmd+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "ctrl+shift+n",
        "mac": "cmd+shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "ctrl+b ctrl+w",
        "mac": "cmd+b cmd+w",
        "command": "workbench.action.joinAllGroups",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+n",
        "mac": "cmd+b cmd+n",
        "command": "workbench.action.splitEditor",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+p",
        "mac": "cmd+b cmd+p",
        "command": "markdown.showPreviewToSide",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+r",
        "mac": "cmd+b cmd+r",
        "command": "workbench.action.reopenClosedEditor",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+[Equal]",
        "mac": "cmd+b cmd+[Equal]",
        "command": "workbench.action.splitEditorOrthogonal",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+[Minus]",
        "mac": "cmd+b cmd+[Minus]",
        "command": "workbench.action.splitEditorDown",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b right",
        "mac": "cmd+b right",
        "command": "workbench.action.navigateRight",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+right",
        "mac": "cmd+b cmd+right",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b down",
        "mac": "cmd+b down",
        "command": "workbench.action.navigateDown",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+down",
        "mac": "cmd+b cmd+down",
        "command": "workbench.action.moveEditorToBellowGroup",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b left",
        "mac": "cmd+b left",
        "command": "workbench.action.navigateLeft",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+left",
        "mac": "cmd+b cmd+left",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b up",
        "mac": "cmd+b up",
        "command": "workbench.action.navigateUp",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+up",
        "mac": "cmd+b cmd+up",
        "command": "workbench.action.moveEditorToAboveGroup",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+b ctrl+a",
        "mac": "cmd+b cmd+a",
        "command": "workbench.action.showAllEditors"
      },
      {
        "key": "ctrl+b ctrl+g",
        "mac": "cmd+b cmd+g",
        "command": "workbench.action.showEditorsInActiveGroup"
      },
      {
        "key": "ctrl+b ctrl+n",
        "mac": "cmd+b cmd+n",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+b right",
        "mac": "cmd+b right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+b left",
        "mac": "cmd+b left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+b ctrl+w",
        "mac": "cmd+b cmd+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
      },
      {
        "key": "ctrl+shift+[BracketRight]",
        "mac": "cmd+shift+[BracketRight]",
        "command": "editor.fold",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+shift+[BracketLeft]",
        "mac": "cmd+shift+[BracketLeft]",
        "command": "editor.unfold",
        "when": "editorFocus"
      },
      {
        "key": "ctrl+[BracketRight]",
        "mac": "cmd+[BracketRight]",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+[BracketLeft]",
        "mac": "cmd+[BracketLeft]",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+j",
        "mac": "cmd+j",
        "command": "editor.action.joinLines",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+t u",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+t l",
        "command": "editor.action.transformToLowercase",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+t t",
        "command": "editor.action.transformToTitlecase",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+d",
        "mac": "cmd+shift+d",
        "command": "deleteInsideWord",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+right",
        "command": "editor.action.moveCarretRightAction",
        "when": "editorTextFocus"
      },
      {
        "key": "alt+left",
        "command": "editor.action.moveCarretLeftAction",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+up",
        "mac": "cmd+up",
        "command": "code-flow.paragraphMoveUp",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+down",
        "mac": "cmd+down",
        "command": "code-flow.paragraphMoveDown",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+up",
        "mac": "cmd+shift+up",
        "command": "code-flow.paragraphSelectUp",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+shift+down",
        "mac": "cmd+shift+down",
        "command": "code-flow.paragraphSelectDown",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l e",
        "mac": "cmd+l e",
        "command": "cursorLineEnd",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l shift+e",
        "mac": "cmd+l shift+e",
        "command": "cursorLineEndSelect",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l b",
        "mac": "cmd+l b",
        "command": "cursorLineStart",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l shift+s",
        "mac": "cmd+l shift+s",
        "command": "cursorLineStartSelect",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l l",
        "mac": "cmd+l l",
        "command": "expandLineSelection",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l d",
        "mac": "cmd+l d",
        "command": "editor.action.deleteLines",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l delete",
        "mac": "cmd+l delete",
        "command": "deleteAllRight",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+l backspace",
        "mac": "cmd+l backspace",
        "command": "deleteAllLeft",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+g g",
        "mac": "cmd+g g",
        "command": "workbench.action.gotoLine",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+g l",
        "mac": "cmd+g l",
        "command": "workbench.action.navigateToLastEditLocation",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+g b",
        "mac": "cmd+g b",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+g shift+b",
        "mac": "cmd+g shift+b",
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus"
      },
      {
        "key": "ctrl+g down",
        "mac": "cmd+g down",
        "command": "cursorPageDown",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+g shift+down",
        "mac": "cmd+g shift+down",
        "command": "cursorPageDownSelect",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+g up",
        "mac": "cmd+g up",
        "command": "cursorPageUp",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+g shift+up",
        "mac": "cmd+g shift+up",
        "command": "cursorPageUpSelect",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+g e",
        "mac": "cmd+g e",
        "command": "cursorEnd",
        "when": "textInputFocus",
        "args": {
          "sticky": false
        }
      },
      {
        "key": "ctrl+g shift+e",
        "mac": "cmd+g shift+e",
        "command": "cursorEndSelect",
        "when": "textInputFocus",
        "args": {
          "sticky": false
        }
      },
      {
        "key": "ctrl+g s",
        "mac": "cmd+g s",
        "command": "cursorHome",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+g shift+s",
        "mac": "cmd+g shift+s",
        "command": "cursorHome",
        "when": "textInputFocus"
      },
      {
        "key": "ctrl+r",
        "mac": "cmd+r",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
      },
      {
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "command": "workbench.action.replaceInFiles"
      },
      {
        "key": "ctrl+h h",
        "mac": "cmd+h h",
        "command": "code-flow.paragraphExpandSelection"
      },
      {
        "key": "ctrl+h s",
        "mac": "cmd+h s",
        "command": "code-flow.paragraphMoveStart"
      },
      {
        "key": "ctrl+h shift+s",
        "mac": "cmd+h shift+s",
        "command": "code-flow.paragraphSelectStart"
      },
      {
        "key": "ctrl+h e",
        "mac": "cmd+h e",
        "command": "code-flow.paragraphMoveEnd"
      },
      {
        "key": "ctrl+h shift+e",
        "mac": "cmd+h shift+e",
        "command": "code-flow.paragraphSelectEnd"
      }
    ],
    "configuration": {
      "title": "Code Flow Configuration",
      "type": "object",
      "properties": {
        "code-flow.languageMarks": {
          "type": "object",
          "description": "Language Marks Definition",
          "default": {
            "typescript": [
              "^(switch|if|else|var|module|public|private|enum|export|for|while|return|function|try|catch|return|yield|const)"
            ]
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.55.0",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "eslint": "^7.19.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "glob": "^7.1.6",
    "mocha": "^8.2.1",
    "typescript": "^4.1.3",
    "vscode-test": "^1.5.0"
  }
}